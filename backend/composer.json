{
    "name": "clean-structure/laravel-demo",
    "description": "Универсальная структура проекта на примере Laravel",
    "license": "MIT",
    "type": "project",
    "keywords": [
        "laravel",
        "framework"
    ],
    "require": {
        "php": "^8.4",
        "darkaonline/l5-swagger": "^9.0.1",
        "laravel/framework": "^12.10.2",
        "laravel/tinker": "^2.10.1",
        "phpdocumentor/reflection-docblock": "^5.6.2",
        "spatie/laravel-route-attributes": "^1.25.2",
        "symfony/property-access": "^7.2.3",
        "symfony/serializer": "^7.2.5"
    },
    "require-dev": {
        "ergebnis/composer-normalize": "^2.47",
        "fakerphp/faker": "^1.24.1",
        "mockery/mockery": "^1.6.12",
        "nunomaduro/collision": "^8.8",
        "pdepend/pdepend": "3.x-dev#625560a5915047e6b2a1047579eb1505709ababc@dev",
        "phpat/phpat": "^0.11.4",
        "phpmd/phpmd": "dev-3.x-xdebug-option@dev",
        "phpstan/extension-installer": "^1.4.3",
        "phpstan/phpstan": "^2.1.13",
        "phpunit/phpunit": "^11.5.18",
        "squizlabs/php_codesniffer": "^3.12.2"
    },
    "minimum-stability": "stable",
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "CleanStructure\\": "src/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "config": {
        "allow-plugins": {
            "ergebnis/composer-normalize": true,
            "pestphp/pest-plugin": true,
            "php-http/discovery": true,
            "phpstan/extension-installer": true
        },
        "cache-dir": "./storage",
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "scripts": {
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
            "@php artisan migrate --graceful --ansi"
        ],
        "dev": [
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fb7185,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"php artisan pail --timeout=0\" \"npm run dev\" --names=server,queue,logs,vite"
        ],
        "fix": [
            "composer normalize --diff",
            "composer bump",
            "vendor/bin/phpcbf"
        ],
        "phpcs": "vendor/bin/phpcs",
        "phpmd": "vendor/bin/phpmd bootstrap,config/,src/,tests/,database/ text phpmd-ruleset.xml",
        "phpstan": "vendor/bin/phpstan --memory-limit=-1",
        "phpunit": "php -dxdebug.mode=coverage vendor/bin/phpunit --coverage-text",
        "test": [
            "composer phpcs",
            "composer phpmd",
            "composer phpstan",
            "composer phpunit"
        ]
    },
    "schema": "https://getcomposer.org/schema.json"
}
